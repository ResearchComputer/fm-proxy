---
import { getSession } from 'auth-astro/server';
import PageLayout from "@layouts/PageLayout.astro";
import Container from "@components/Container.astro";
import { SITE } from "@consts";
import { getApiKey, getUserProfile } from '@lib/auth';
import { SignIn } from 'auth-astro/components';

export const prerender = false;

// Check if user is authenticated
const session = await getSession(Astro.request);

// If not authenticated, redirect to home page
if (!session) {
  return Astro.redirect('/');
}

// API key will be fetched client-side to avoid exposing it in the HTML
let apiKey = "Loading...";
---

<PageLayout title="API Key" description="Your personal API key for accessing Research Computer services">
  <Container>
    <div class="space-y-8 py-8">
      <h1 class="animate text-3xl font-bold text-black dark:text-white">Your API Key</h1>
      
      <div class="animate p-6 bg-gray-100 dark:bg-gray-800 rounded-lg shadow-md">
        <div class="mb-4">
          <p class="text-gray-700 dark:text-gray-300 mb-2">Welcome, <span class="font-semibold">{session.user?.name || 'User'}</span>!</p>
          <div id="accountStatus" class="mb-2">
            <p class="text-gray-700 dark:text-gray-300">Account Status: <span id="statusText" class="font-semibold">Loading...</span></p>
          </div>
          <p class="text-gray-700 dark:text-gray-300">Below is your personal API key for accessing Research Computer services:</p>
        </div>
        
        <div class="relative mt-4 mb-6">
          <div class="flex">
            <input 
              type="text" 
              id="apiKeyDisplay" 
              value={apiKey} 
              readonly 
              class="flex-grow px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-l-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:outline-none"
            />
            <button 
              id="copyButton" 
              class="px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-r-md transition-colors"
            >
              Copy
            </button>
          </div>
          <div id="copyMessage" class="hidden absolute -bottom-6 left-0 text-green-600 dark:text-green-400 text-sm">
            Copied to clipboard!
          </div>
          <div id="loadingMessage" class="absolute -bottom-6 left-0 text-blue-600 dark:text-blue-400 text-sm">
            Loading your API key...
          </div>
          <div id="errorMessage" class="hidden absolute -bottom-6 left-0 text-red-600 dark:text-red-400 text-sm">
            Error loading API key. Please login again.
            <SignIn provider="auth0" class="bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-4 rounded transition-colors">
            Login
          </SignIn>
          </div>
        </div>
        
        <div class="mt-8">
          <h2 class="text-xl font-semibold text-black dark:text-white mb-3">How to use your API key</h2>
          <div class="space-y-4 text-gray-700 dark:text-gray-300">
            <p>Include this API key in the header of your requests to the {SITE.NAME} API:</p>
            <div class="bg-gray-200 dark:bg-gray-900 p-3 rounded-md overflow-x-auto">
              <pre><code class="text-sm">Authorization: Bearer <span id="headerApiKey">your-api-key</span></code></pre>
            </div>
            If you cannot see your API key, please sign out and sign in again to refresh your session.

            <p>The endpoint is compatible with OpenAI protocol. Example Python request:</p>
            <div class="bg-gray-200 dark:bg-gray-900 p-3 rounded-md overflow-x-auto">
              <pre><code class="text-sm" id="pythonApiKey">test</code></pre>
            </div>
          </div>
        </div>
      </div>
      
      <div class="animate p-6 bg-gray-100 dark:bg-gray-800 rounded-lg shadow-md">
        <h2 class="text-xl font-semibold text-black dark:text-white mb-3">API Key Security</h2>
        <div class="space-y-3 text-gray-700 dark:text-gray-300">
          <p>⚠️ <span class="font-semibold">Keep your API key secure</span>. Do not share it publicly or include it in client-side code.</p>
          <p>If you believe your API key has been compromised, please contact support to reset it.</p>
        </div>
      </div>
    </div>
  </Container>
</PageLayout>

<script define:vars={{ session }}>
  // Function to get API key from storage
  function getApiKey() {
    return localStorage.getItem('apiKey');
  }
  
  // Function to set API key in storage
  function setApiKey(apiKey) {
    // localStorage.setItem('apiKey', apiKey);
  }
  
  // Function to fetch API key from the server using the access token
  async function fetchApiKey() {
    try {
      const loadingMessage = document.getElementById('loadingMessage');
      const errorMessage = document.getElementById('errorMessage');
      const apiKeyDisplay = document.getElementById('apiKeyDisplay');
      const headerApiKey = document.getElementById('headerApiKey');
      const pythonApiKey = document.getElementById('pythonApiKey');
      const statusText = document.getElementById('statusText');
      
      // Get user details from session
      const userEmail = session?.user?.email || '';
      const userName = session?.user?.name || '';
      
      // Try to get API key from storage first
      let apiKey = getApiKey();
      
      // If not in storage, fetch from server
      if (!apiKey) {
        const response = await fetch('https://api.swissai.cscs.ch/v1/profile', {
          method: 'GET',
          headers: {
            'Content-Type': 'application/json',
            'Authorization': `Bearer ${session.accessToken}`,
          }
        });
        
        if (!response.ok) {
          throw new Error(`Error: ${response.status}`);
        }
        
        const data = await response.json();
        apiKey = data.api_key;
        
        // Update account status based on budget
        if (statusText) {
          if (data.budget <= 0) {
            statusText.textContent = 'Inactive';
            statusText.classList.add('text-red-600', 'dark:text-red-400');
          } else {
            statusText.textContent = 'Active';
            statusText.classList.add('text-green-600', 'dark:text-green-400');
          }
        }
        
        // Store the API key if we got one
        if (apiKey) {
          setApiKey(apiKey);
        }
      }
      
      if (!apiKey) {
        throw new Error('No API key available');
      }
      
      // Update UI with API key
      if (apiKeyDisplay) apiKeyDisplay.value = apiKey;
      if (headerApiKey) headerApiKey.textContent = apiKey;
      
      // Update the Python example
      if (pythonApiKey) {
        pythonApiKey.textContent = `import openai

client = openai.Client(api_key="[YOUR_API_KEY]", base_url="https://api.swissai.cscs.ch/v1")
res = client.chat.completions.create(
    model="[ANY_AVAILBLE_MODEL]",
    messages=[
        {
            "content": "Who is Pablo Picasso?", 
            "role": "user",
        }
    ],
    stream=True,
)

for chunk in res:
    if len(chunk.choices) > 0 and chunk.choices[0].delta.content:
        print(chunk.choices[0].delta.content, end="", flush=True)
`;
      }
      
      // Hide loading message
      if (loadingMessage) loadingMessage.classList.add('hidden');
    } catch (error) {
      console.error('Error fetching API key:', error);
      const loadingMessage = document.getElementById('loadingMessage');
      const errorMessage = document.getElementById('errorMessage');
      
      if (loadingMessage) loadingMessage.classList.add('hidden');
      if (errorMessage) {
        errorMessage.classList.remove('hidden');
        errorMessage.innerHTML = "Error loading API key. Please sign out and sign in again or refresh the page.";
        const signInButton = document.createElement('div');
        signInButton.innerHTML = `<button onclick="window.location.href='/auth/signin'" class="bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-4 rounded transition-colors mt-2">Sign In</button>`;
        errorMessage.appendChild(signInButton);
      }
    }
  }
  
  // Copy to clipboard functionality
  document.addEventListener('DOMContentLoaded', () => {
    // Fetch API key on page load
    fetchApiKey();
    
    const copyButton = document.getElementById('copyButton');
    const apiKeyDisplay = document.getElementById('apiKeyDisplay');
    const copyMessage = document.getElementById('copyMessage');
    
    if (copyButton && apiKeyDisplay && copyMessage) {
      copyButton.addEventListener('click', () => {
        // Select the text
        apiKeyDisplay.select();
        
        // Copy to clipboard
        navigator.clipboard.writeText(apiKeyDisplay.value)
          .then(() => {
            // Show success message
            copyMessage.classList.remove('hidden');
            
            // Hide message after 2 seconds
            setTimeout(() => {
              copyMessage.classList.add('hidden');
            }, 2000);
          })
          .catch(err => {
            console.error('Failed to copy: ', err);
            alert('Failed to copy API key to clipboard');
          });
      });
    }
  });
</script>